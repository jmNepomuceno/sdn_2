
https://drive.google.com/file/d/1pTVTsv_n7ZTU12jk7WgGSeSZTpUIu3rF/view?usp=drivesdk
http://192.168.42.10:8025/#

https://chat.openai.com/c/44ee06cd-630a-4c64-9e3a-1668b3f5c579

id, last_name, first_name, middle_name, birthday, mobile_no, username, password



SDN
hospital -> the whos gonna register
username and password -> hospital upon register

GENERAL FLOW = register -> OTP saved sa database -> send mail -> loading screen -> OTP modal -> confirmation -> "AUTHORIZATION KEY?"
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

visual validation = confirmation na navalidate na = prompt/modal NOT SURE IF MODAL OR SIMPLE WINDOW PROMPT????

mobile number , ####-####-### = DONE
tele number , ###-#### = DONE
email, #####@gmail.com = DONE
pag na close yung modal -> destroy or delete the whole row = DONE
pag mali OTP -> update OTP sa DB ->  cked the RESEND OTP -> update OTP sa DB -> resend OTP = DONE
set VERIFIED in DB after checking the OTP from user and from DB = DONE

START SESSION - REGISTER - END SESSION

9/18/23
ZIP CODE -> length = DONE
HOSPITAL DIRECTOR -> ONLY LETTERS = DONE
POINT PERSON -> ONLY LETTERS = DONE

VERIFICATION SUCCESS MODAL OR PROMPT
VERIFICATION NOT SUCCESS MODAL OR PROMPT

//after verification -> back to home page -> SDN main login form

---------------------------------
admin module -> LoI -> verification
---------------------------------
CRCF , OTP
2 users inside the hospital registered acc
history log sa SDN
tutorial view on how to use SDN on first logged

9/19/2023
change the OTP generation code = DONE
fix the OTP modal input fields = DONE
implemenet the CSRF = SOON
authorization form = DONE

9/20/2023
AUTHORIZATION -> INTO DATABASE -> DRAFT UNTIL CIPHER KEY IS NOT OFFICIATED.
UI/UX main/home page
implementation ng UI/UX main/home page
admin module sa navbar or side bar, para makapag send ng cipher key

mini to do list
icon/home button = clicked = close all = refresh page

ISNTALL GITHUB :)))



9/23/2023
authorization form insert into database
TABLE sdn_hospital - hospital_ID -> PRIMARY KEY = di pa sure if tama po yung idea namin hahaha
TABLE sdn_users - user_ID -> PRIMARY KEY ,  hospital_ID -> FOREIGN KEY 

ADD the preview/default/home view for SDN page upon logging in

ADJUSTING AND IMPROVING THE UI IN PATIENT REGISTRATION FORM
resize the form fields and divs in patient registration form to have breathing room
add the search bar for patient 
make the search bar functionable 






<?php for ($x = 0; $x < count($sdn_fields); $x++) { ?>
                                <div class="w-11/12 flex flex-row justify-evenly items-center mt-3">
                                    <div class="w-full flex flex-row justify-start items-center p-1">
                                        <?php if($x == 2 || $x == 2 || $x == 2 || $x == 2){ ?>
                                            <label class="text-xs sm:text-xl  ml-3" for=<?php echo $sdn_id[$x] ?> > <span class="text-red-600"></span> <?php echo $sdn_fields[$x] ?> </label>
                                        <?php } else { ?>   
                                            
                                        <?php }?> 
                                    </div>
                                    <?php if($x == 7){ ?>
                                        <input type="email" id=<?php echo $sdn_id[$x] ?> name=<?php echo $sdn_input_names[$x] ?> class="border-2 border-sdnRegistraionColor w-[115%] sm:w-[95%] h-[40px] sm:h-[60px] border-2 outline-none p-2" required autocomplete="off">
                                    <?php }else if($x == 10){ ?>
                                        <input type="text" id=<?php echo $sdn_id[$x] ?> name=<?php echo $sdn_input_names[$x] ?> class="border-2 border-sdnRegistraionColor w-[115%] sm:w-[95%] h-[40px] sm:h-[60px] border-2 outline-none p-2" required autocomplete="off" onkeydown="return /[a-zA-Z]/i.test(event.key)">
                                    <?php }else if($x == 12){ ?>
                                        <input type="text" id=<?php echo $sdn_id[$x] ?> name=<?php echo $sdn_input_names[$x] ?> class="border-2 border-sdnRegistraionColor w-[115%] sm:w-[95%] h-[40px] sm:h-[60px] border-2 outline-none p-2" required autocomplete="off" onkeydown="return /[a-zA-Z]/i.test(event.key)">
                                    <?php }else if($x == 6){ ?>
                                        <input type="number" id=<?php echo $sdn_id[$x] ?> name=<?php echo $sdn_input_names[$x] ?> class="pointer-events-none border-2 border-sdnRegistraionColor w-[115%] sm:w-[95%] h-[40px] sm:h-[60px] border-2 outline-none p-2 text-center" required autocomplete="off">
                                    <?php }else if($x == 2){ ?>
                                        
                                        <select id="sdn-region-select" required onchange="getLocations('region')" name="region" class="text-xs sm:text-base w-full h-full text-center border-2 border-sdnRegistraionColor cursor-pointer outline-none" autocomplete="off">
                                            <option value="" class="">Choose a Region</option>
                                            <?php 
                                                $stmt = $pdo->query('SELECT region_code, region_description from region');
                                                while($data = $stmt->fetch(PDO::FETCH_ASSOC)){
                                                    echo '<option value="' , $data['region_code'] , '">' , $data['region_description'] , '</option>';
                                                }                                        
                                            ?>
                                        </select>
                                    <?php }else if($x == 3){ ?>
                                        
                                        <select id="sdn-province-select" required onchange="getLocations('province')" name="province" class="text-xs sm:text-base w-full h-full text-center border-2 border-sdnRegistraionColor cursor-pointer outline-none">
                                            <option value="" class="">Choose a Province</option>
                                        </select>
                                    <?php }else if($x == 4){ ?>
                                       
                                        <select id="sdn-city-select" required onchange="getLocations('city')" name="municipality" class="text-xs sm:text-base w-full h-full text-center border-2 border-sdnRegistraionColor cursor-pointer outline-none">
                                            <option value="" class="">Choose a Municipality</option>
                                        </select>

                                    <?php }else if($x == 5){ ?>
                                        
                                        <select id="sdn-brgy-select" name="barangay" class="text-xs sm:text-base w-full h-full text-center border-2 border-sdnRegistraionColor cursor-pointer outline-none">
                                            <option value="" class="">Choose a Barangay</option>
                                        </select>
                                    <?php } else { ?>
                                        <input type="text" id=<?php echo $sdn_id[$x] ?> name=<?php echo $sdn_input_names[$x] ?> class=" border-2 border-sdnRegistraionColor uppercase w-[115%] sm:w-[95%] h-[40px] sm:h-[60px] border-2 outline-none p-2" required autocomplete="off">
                                    <?php } ?> 
                                    <!-- <input type="text" id=<?php echo $sdn_id[$x] ?> name=<?php echo $sdn_input_names[$x] ?> class=" border-2 border-sdnRegistraionColor uppercase w-[115%] sm:w-[95%] h-[40px] sm:h-[60px] border-2 outline-none p-2" required autocomplete="off"> -->
                                </div>
                            <?php } ?>


hpercode
patbplace
patsex
patcstat

pat_bldg
pat_email
pat_homephone_no
pat_region
pat_province
pat_municipality
pat_barangay

pat_curr_workplace
pat_work_region
pat_work_province
pat_work_municipal


Monday = silver grey
T = dark/navy blue
W = PINK
TH = cream / light orangey browny
F = ANY


1. limit the search query to at least 2 characters. _/
2. modals _/
3. cleaning again
4. gl hf

<!-- <?php echo $type; ?> Referral Form -->

auto focus on otp prompt
passport number = 
home phone number
mobile number

clear ng mga fields after registration
edit button mga fields

mondy 0
wednesday 3
friday 5

index arrangement ng session[process timer]
0 VM5488:577 {interval_0: 33, interval_1: 34} 'interval_1' 'string'

add_referral_form
pending modal sa different na mga pc upon referring
restriction part sa mga input sa patient registration
create a table for outgoing patients same with incoming patients


    
Referred:12/07/2023 - 19:09:48       Processing: 00:00:26
Processed:12/07/2023 - 19:10:14      Approval/Deferral: 00:18:57
Deferred:12/07/2023 - 19:29:11       Total: 00:19:23	



// Your array
$myArray = array("apple", "banana", "orange", "grape");

// Element to check
$elementToCheck = "banana";

// Check if the element is in the array
if (in_array($elementToCheck, $myArray)) {
    echo "$elementToCheck is in the array.";
} else {
    echo "$elementToCheck is not in the array.";
}


<!-- <input type="hidden" id="total-processed-refer-inp" value=<?php echo $data['COUNT(*)'] ?>> -->

1. upon referring, di nag a update yung sa hperson na type and status ng patient = DONE (?)
2. OTP may case na 5 digits lang yung na r random = DONE (?)
3. wrong OTP input - modal = DONE (?)
4. Exisiting Referred Patient -> thou shall not referred again - disable refer button = DONE (?)
5. Status not automatically changing = DONE (?)
6. Timer input color should change. = DONE (?)

Flow - Admitted - Discharged - For Follow Up - Referred Back

note: 
1. pag ka click ng lapis, dat mag r run na yung timer
2. pag di pa nagagawa yung unang referral na dumating, dat di pa nila pwede gawin yung mga sumunod na referral, first in first out.

.-
-.--
.-
-.--
.-

// if (!validateCsrfToken($_POST['csrf_token'])) {
        //     // CSRF token is invalid, handle accordingly (e.g., show an error, log the incident)
        //     die("CSRF token validation failed!");
        // }else{
        //     $sdn_username = $_POST['sdn_username'];
        //     $sdn_password = $_POST['sdn_password'];
        //     $account_validity = false;
        //     // //query to check if the user is already logged in.
        //     // if($sdn_username != "" && $sdn_password != ""){
        //     //     $_SESSION['user_name'] = "John Marvin Nepomuceno";
        //     //     $_SESSION['user_password'] = "password";
        //     //     header('Location: ./main.php');
        //     // }

        //     // login verifaction for the outside users
        //     if($sdn_username != "admin" && $sdn_password != "admin"){
        //         try{
        //             $stmt = $pdo->prepare('SELECT * FROM sdn_users WHERE username = ? AND password = ?');
        //             $stmt->execute([$sdn_username , $sdn_password]);
        //             $data_child = $stmt->fetchAll(PDO::FETCH_ASSOC);
        //             // echo '<pre>'; print_r($data_child); echo '</pre>';

        //             if(count($data_child) == 1){
        //                 $account_validity = true;
        //             }

        //             // echo '<pre>'; print_r($data_child); echo '</pre>';
        //             // echo $data_child[0]['hospital_code'];


        //             // $stmt_all_data = $pdo->prepare("SELECT sdn_hospital.*
        //             //                                 FROM sdn_hospital
        //             //                                 JOIN sdn_users ON sdn_hospital.hospital_code = sdn_users.hospital_code
        //             //                                 WHERE sdn_users.hospital_code = 6574");

        //             // $stmt_all_data->execute();
        //             // $data_all_data = $stmt_all_data->fetchAll(PDO::FETCH_ASSOC);
                    
        //             if($account_validity == true){
        //                 $stmt = $pdo->prepare('SELECT * FROM sdn_hospital WHERE hospital_code = ?');
        //                 $stmt->execute([$data_child[0]['hospital_code']]);
        //                 $data_parent = $stmt->fetchAll(PDO::FETCH_ASSOC);
                        
        //                 // echo '<pre>'; print_r($data_parent); echo '</pre>';

        //                 $_SESSION['hospital_code'] = $data_parent[0]['hospital_code'];
        //                 $_SESSION['hospital_name'] = $data_parent[0]['hospital_name'];
        //                 $_SESSION['hospital_email'] = $data_parent[0]['hospital_email'];
        //                 $_SESSION['hospital_landline'] = $data_parent[0]['hospital_landline'];
        //                 $_SESSION['hospital_mobile'] = $data_parent[0]['hospital_mobile'];
        //                 $_SESSION['hospital_name'] = $data_parent[0]['hospital_name'];

        //                 $_SESSION['user_name'] = $data_child[0]['username'];
        //                 $_SESSION['user_password'] = $data_child[0]['password'];
        //                 $_SESSION['first_name'] = $data_child[0]['user_firstname'];
        //                 $_SESSION['last_name'] = $data_child[0]['user_lastname'];
        //                 $_SESSION['middle_name'] = $data_child[0]['user_middlename'];
        //                 $_SESSION['user_type'] = 'outside';

        //                 $_SESSION['post_value_reload'] = 'false';
        //                 $_SESSION["sub_what"] = "";

        //                 // Get the current date and time
        //                 $timezone = new DateTimeZone('Asia/Manila'); // Replace 'Your/Timezone' with your actual time zone
        //                 $currentDateTime = new DateTime("",$timezone);

        //                 // Format date components
        //                 $year = $currentDateTime->format('Y');
        //                 $month = $currentDateTime->format('m');
        //                 $day = $currentDateTime->format('d');

        //                 $hours = $currentDateTime->format('H');
        //                 $minutes = $currentDateTime->format('i');
        //                 $seconds = $currentDateTime->format('s');

        //                 $final_date = $year . "/" . $month . "/" . $day . " " . $hours . ":" . $minutes . ":" . $seconds;
        //                 $normal_date = $year . "-" . $month . "-" . $day . " " . $hours . ":" . $minutes . ":" . $seconds;

        //                 $_SESSION['login_time'] = $final_date;

        //                 $sql = "UPDATE incoming_referrals SET login_time = '". $final_date ."' , login_user='". $sdn_username ."' ";
        //                 $stmt = $pdo->prepare($sql);
        //                 $stmt->execute();

        //                 $sql = "UPDATE sdn_users SET user_lastLoggedIn='online' , user_isActive='1' WHERE username=:username AND password=:password";
        //                 $stmt = $pdo->prepare($sql);
        //                 $stmt->bindParam(':username', $data_child[0]['username'], PDO::PARAM_STR);
        //                 $stmt->bindParam(':password', $data_child[0]['password'], PDO::PARAM_STR);
        //                 $stmt->execute();

        //                 // for history log
        //                 $act_type = 'user_login';
        //                 $pat_name = " ";
        //                 $hpercode = " ";
        //                 $action = 'online';
        //                 $user_name = $data_child[0]['username'];
        //                 $sql = "INSERT INTO history_log (hpercode, hospital_code, date, activity_type, action, pat_name, username) VALUES (?,?,?,?,?,?,?)";
        //                 $stmt = $pdo->prepare($sql);

        //                 $stmt->bindParam(1, $hpercode, PDO::PARAM_STR);
        //                 $stmt->bindParam(2, $_SESSION['hospital_code'], PDO::PARAM_INT);
        //                 $stmt->bindParam(3, $normal_date, PDO::PARAM_STR);
        //                 $stmt->bindParam(4, $act_type, PDO::PARAM_STR);
        //                 $stmt->bindParam(5, $action, PDO::PARAM_STR);
        //                 $stmt->bindParam(6, $pat_name, PDO::PARAM_STR);
        //                 $stmt->bindParam(7, $user_name, PDO::PARAM_STR);

        //                 $stmt->execute();

        //                 header('Location: ./main.php');
        //             }else{
        //                 echo '<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        //                         <script type="text/javascript">
        //                             var jQuery = $.noConflict(true);
        //                             jQuery(document).ready(function() {
        //                                 jQuery("#modal-title").text("Warning")
        //                                 jQuery("#modal-icon").addClass("fa-triangle-exclamation")
        //                                 jQuery("#modal-icon").removeClass("fa-circle-check")
        //                                 jQuery("#modal-body").text("Invalid username and password!")
        //                                 jQuery("#ok-modal-btn").text("Close")
        //                                 jQuery("#myModal").modal("show");
        //                             });
        //                         </script>';
        //             }
                    
        //         }catch(PDOException $e){
        //             echo "Error: " . $e->getMessage();
        //         }

        //     }
        //     //verification for admin user logged in
        //     else if($sdn_username == "admin" && $sdn_password == "admin"){
        //         // $_SESSION['user_name'] = "Bataan General Hospital and Medical Center";
        //         $_SESSION['hospital_code'] = '1437';
        //         $_SESSION['hospital_name'] = "Bataan General Hospital and Medical Center";
        //         $_SESSION['hospital_landline'] = '333-3333';
        //         $_SESSION['hospital_mobile'] = '3333-3333-333';
        //         // $_SESSION['user_name'] = "Administrator";
        //         // $_SESSION['user_password'] = $sdn_password;

        //         $_SESSION['user_name'] = 'admin';
        //         $_SESSION['user_password'] = 'admin';
        //         $_SESSION['last_name'] = 'Administrator';
        //         $_SESSION['first_name'] = '';
        //         $_SESSION['middle_name'] = '';
        //         $_SESSION['user_type'] = 'admin';
        //         // $_SESSION["process_timer"] = [];
        //         $_SESSION['post_value_reload'] = 'false';
        //         $_SESSION["sub_what"] = "";
                
        //         // Get the current date and time
        //         $timezone = new DateTimeZone('Asia/Manila'); // Replace 'Your/Timezone' with your actual time zone
        //         $currentDateTime = new DateTime("",$timezone);

        //         // Format date components
        //         $year = $currentDateTime->format('Y');
        //         $month = $currentDateTime->format('m');
        //         $day = $currentDateTime->format('d');

        //         $hours = $currentDateTime->format('H');
        //         $minutes = $currentDateTime->format('i');
        //         $seconds = $currentDateTime->format('s');

        //         $final_date = $year . "/" . $month . "/" . $day . " " . $hours . ":" . $minutes . ":" . $seconds;
        //         $temp_date = $year . "-" . $month . "-" . $day . " " . $hours . ":" . $minutes . ":" . $seconds;
                
        //         $_SESSION['login_time'] = $final_date;

        //         $sql = "UPDATE incoming_referrals SET login_time = :final_date, login_user = :sdn_username";
        //         $stmt = $pdo->prepare($sql);

        //         // Bind parameters
        //         $stmt->bindParam(':final_date', $final_date, PDO::PARAM_STR);
        //         $stmt->bindParam(':sdn_username', $sdn_username, PDO::PARAM_STR);

        //         // Execute the statement
        //         $stmt->execute();

        //         $sql = "UPDATE sdn_users SET user_lastLoggedIn='online' , user_isActive='1' WHERE username='admin' AND password='admin'";
        //         $stmt = $pdo->prepare($sql);
        //         $stmt->execute();

        //         // for history log
        //         $act_type = 'user_login';
        //         $pat_name = " ";
        //         $hpercode = " ";
        //         $action = 'online';
        //         $user_name = 'admin';
        //         $sql = "INSERT INTO history_log (hpercode, hospital_code, date, activity_type, action, pat_name, username) VALUES (?,?,?,?,?,?,?)";
        //         $stmt = $pdo->prepare($sql);

        //         $stmt->bindParam(1, $hpercode, PDO::PARAM_STR);
        //         $stmt->bindParam(2, $_SESSION['hospital_code'], PDO::PARAM_INT);
        //         $stmt->bindParam(3, $temp_date, PDO::PARAM_STR);
        //         $stmt->bindParam(4, $act_type, PDO::PARAM_STR);
        //         $stmt->bindParam(5, $action, PDO::PARAM_STR);
        //         $stmt->bindParam(6, $pat_name, PDO::PARAM_STR);
        //         $stmt->bindParam(7, $user_name, PDO::PARAM_STR);

        //         $stmt->execute();

        //         header('Location: ./main.php');
        //     } 

        //     else if($sdn_username != 'admin' || $sdn_password != 'admin'){
        //         echo '<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        //                 <script type="text/javascript">
        //                     var jQuery = $.noConflict(true);
        //                     jQuery(document).ready(function() {
        //                         jQuery("#modal-title").text("Warning")
        //                         jQuery("#modal-icon").addClass("fa-triangle-exclamation")
        //                         jQuery("#modal-icon").removeClass("fa-circle-check")
        //                         jQuery("#modal-body").text("Invalid username and password!")
        //                         jQuery("#ok-modal-btn").text("Close")
        //                         jQuery("#myModal").modal("show");
        //                     });
        //                 </script>';
        //     }
        // }   

13.43
23.87


<input type="hidden" name="csrf_token" value="<?php echo $_SESSION['_csrf_token']; ?>">